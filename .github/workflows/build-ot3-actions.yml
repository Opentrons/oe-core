name: 'Build OT3 image on github workflows'

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  workflow_dispatch:

jobs:
  run-build:
    name: 'Building images'
    timeout-minutes: 480
    runs-on: 'self-hosted'
    steps:
      - name: Fetch sources
        uses: 'actions/checkout@v3'
        with:
          submodules: true
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Build container
        run: |
          tmp_dir=$(mktemp -d -t ci-XXXXXXX)
          cp start.sh $tmp_dir/
          docker build -f ./Dockerfile --tag "ot3-image:latest" $tmp_dir
      - name: Apply CI config overrides
        run: |
          echo "" >> ./build/conf/local.conf
          echo 'DL_DIR = "/volumes/cache/downloads"' >> ./build/conf/local.conf
          echo 'SSTATE_DIR = "/volumes/cache/sstate"' >> ./build/conf/local.conf
      - name: Pull S3 cache
        shell: bash
        run: |
          synccommand=aws s3 sync s3://${S3_CACHE_ARN/arn:aws:s3:::/} ${LOCAL_CACHE:-./cache}"
          echo $synccommand
          $synccommand
      - name: Download sources
        run: |
          docker run --rm --mount type=bind,src=$(pwd),dst=/volumes/oe-core,consistency=delegated --mount type=bind,src=${LOCAL_CACHE:-./cache},dst=/volumes/cache,consistency=delegated ot3-image:latest opentrons-ot3-image --runall=fetch
      - name: Build image
        run: |
          docker run --rm --mount type=bind,src=$(pwd),dst=/volumes/oe-core,consistency=delegated --mount type=bind,src=${LOCAL_CACHE:-./cache},dst=/volumes/cache,consistency=delegated ot3-image:latest
      - name: Prune images
        if: always()
        run: docker image prune -af
      - name: Remove poisoned cache
        if: failure()
        run: |
          rm -rf ${LOCAL_CACHE:-./cache}/*
      - name: Push S3 cache
        shell: bash
        run: |
          aws s3 sync ${LOCAL_CACHE:-./cache} s3://${S3_CACHE_ARN/arn:aws:s3:::/}
      - name: Gather results
        run: |
          mkdir -p build/deploy/opentrons
          find ./build/deploy/images -name "*opentrons-ot3-image-Tezi*" -exec cp {} build/deploy/opentrons/ot3-fullimage.tar \;
          find ./build/deploy/images -name "ot3-system.zip" -exec cp {} build/deploy/opentrons \;
          find ./build/deploy/images -name "VERSION.json" -exec cp {} build/deploy/opentrons \;
          tar czf ./build/deploy/opentrons/buildstats.tar.gz ./build/tmp/buildstats
      - name: Upload results to S3
        shell: bash
        run: |
          cd build/deploy/
          aws s3 cp --acl=public-read --recursive opentrons s3://${S3_ARTIFACT_ARN/arn:aws:s3:::/}/ot3-oe/${{ github.run_id }}
