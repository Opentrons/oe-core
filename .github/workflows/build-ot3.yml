name: 'Build OT3 image'

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  workflow_dispatch:

jobs:
  invoke-build:
    name: 'invoking codebuild build'
    timeout-minutes: 480
    runs-on: 'ubuntu-latest'
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Run CodeBuild
        id: codebuild
        uses: aws-actions/aws-codebuild-run-build@v1.0.3
        with:
          project-name: ${{ secrets.AWS_CODEBUILD_PROJECT_NAME }}
      - name: Build full image
        id: result-ot3-fullimage
        run: |
          buildid=$(echo '${{ steps.codebuild.outputs.aws-build-id }}' | cut -d: -f2-)
          echo "::set-output name=ot3-fullimage-url::https://d2irdh6zupqygx.cloudfront.net/${buildid}/ot3-oe/opentrons/ot3-fullimage.tar"
      - name: Build system update
        id: result-ot3-system
        run: |
          buildid=$(echo '${{ steps.codebuild.outputs.aws-build-id }}' | cut -d: -f2-)
          echo "::set-output name=ot3-system-url::https://d2irdh6zupqygx.cloudfront.net/${buildid}/ot3-oe/opentrons/ot3-system.zip"
      - name: Build VERSION file
        id: result-version-file
        run: |
         buildid=$(echo '${{ steps.codebuild.outputs.aws-build-id }}' | cut -d: -f2-)
         echo "::set-output name=version-file-url::https://d2irdh6zupqygx.cloudfront.net/${buildid}/ot3-oe/opentrons/VERSION.json"
      - name: Post results
        uses: slackapi/slack-github-action@v1.14.0
        with:
          payload: "{\"s3-url\":\"https://s3.console.aws.amazon.com/s3/buckets/ot3-builds?prefix=${{ steps.codebuild.outputs.aws-build-id }}/\",\"type\":\"branch\", \"reflike\":\"${{ github.ref }}\", \"full-image\":\"${{steps.result-ot3-fullimage.outputs.ot3-fullimage-url}}\", \"system-update\":\"${{steps.result-ot3-system.outputs.ot3-system-url}}\", \"version-file\":\"${{steps.result-version-file.outputs.version-file-url}}\"}"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

