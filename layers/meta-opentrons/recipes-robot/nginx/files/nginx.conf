user root root;

events {
    worker_connections 1024;
}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        # Values in {} get replaced by environment variable during
        # container build
        listen [::]:31950;
        listen 0.0.0.0:31950;

        client_body_in_file_only off;
        client_body_buffer_size  128k;
        client_max_body_size     2M;

        access_log syslog:server=unix:/dev/log combined;
        error_log stderr;

        # If nginx matches multiple location paths, it uses the one with the
        # longest prefix, so order shouldn't matter but length of path does
        location / {
            proxy_http_version       1.1;
            proxy_set_header         Upgrade $http_upgrade;
            proxy_set_header         Connection $connection_upgrade;
            proxy_read_timeout       1h;
            proxy_pass               http://unix:/run/aiohttp.sock;

            # The /system/time endpoints live in the robot server, and thus
            # the configuration here has to match the / config
            location /system/time { 
                proxy_http_version       1.1;
                proxy_read_timeout       1h;
                proxy_pass               http://unix:/run/aiohttp.sock;

            }

            # /system must be defined as a nested child of /, otherwise it will
            # conflict with matches to /system/time.
            location /system {
                proxy_http_version       1.1;
                proxy_read_timeout       1h;
                proxy_pass               http://127.0.0.1:32950;
            }
        }

        location /protocols {
            proxy_http_version       1.1;
            proxy_read_timeout       1h;
            proxy_pass               http://unix:/run/aiohttp.sock;

            # need for uploading large protocols
            client_max_body_size     0;
        }

        location /server {
            proxy_http_version       1.1;
            proxy_read_timeout       1h;
            proxy_set_header         X-Host-IP $server_addr;
            proxy_pass               http://127.0.0.1:34000;
            proxy_request_buffering  off;
            client_max_body_size     0;
        }

        location /hls {                                                        
            types {                                                            
                application/vnd.apple.mpegurl m3u8;                            
                video/mp2t ts;                                                 
            }                                                                  
            root /var/www/localhost/html/stream;                               
            add_header Cache-Control no-cache;                                 
            add_header Access-Control-Allow-Origin *;                          
        }  
    }
}
rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        allow publish 127.0.0.1;
        deny publish all;

        application live {
            live on;
            record off;
            hls on;
            hls_cleanup on;
            hls_path /var/www/localhost/html/stream/hls;
            hls_fragment 1s;
            hls_playlist_length 3s;
        }
    }
}