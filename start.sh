#! /bin/bash

# Wrapper for bitbake and openembedded builds usable both inside
# and outside a docker container.
#
# One mandatory argument that provides the top directory (required
# for docker support). Run like
# ./start.sh .
#
# or, from some other directory, /path/to/this/file/start.sh
#
# Any subsequent arguments are passed to the main bitbake invocation,
# and will replace the default target if they are present
set -x

cleanup () {
  popd >/dev/null
}

DEFAULT_TARGET=opentrons-ot3-image
THISDIR="${1}"
shift
TARGET="${1:-${DEFAULT_TARGET}}"
shift

trap cleanup EXIT

sudo chown -hR $USER_NAME:$USER_NAME /volumes && chmod -R ug+rw /volumes

pushd ${THISDIR}

echo "Copying config files to build directory"
mkdir -p build/conf
for conf_fi in ./conf/*.conf ; do
    echo "Copying ${conf_fi} > ./build/conf/$(basename ${conf_fi})"
    cat >"./build/conf/$(basename ${conf_fi})" <<EOF
###############################################################################
# THIS IS NOT THE SOURCE OF THIS FILE. DO NOT EDIT THIS FILE HERE. EDIT IT IN #
# oe-core/conf . THIS FILE IS COPIED HERE BY THE BUILD SYSTEM                 #
###############################################################################
EOF
    cat "${conf_fi}" >> "./build/conf/$(basename ${conf_fi})"
    chmod a-w "./build/conf/$(basename ${conf_fi})"
done

export BITBAKEDIR=${THISDIR}/tools/bitbake
. layers/openembedded-core/oe-init-build-env ${THISDIR}/build

# Download locations are being ignored and we are running out of space, so
# for now just create a symlink from /volumes/cache to ~/.cache which is
# externally mounted to S3.
mkdir -p /volumes/cache/
mkdir -p ~/.cache/
ln -sf /volumes/cache ~/.cache

BB_NUMBER_THREADS=$(nproc) bitbake ${TARGET} "$@"
exit $?
